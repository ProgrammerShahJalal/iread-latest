name: CI/CD TEST

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.1'

      # Cache client node modules
      - name: Cache Client Node Modules
        uses: actions/cache@v4
        with:
          path: client/node_modules
          key: ${{ runner.os }}-client-${{ hashFiles('client/package-lock.json') }}
          restore-keys: ${{ runner.os }}-client-

      # Cache Next.js build output
      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: client/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('client/package-lock.json') }}
          restore-keys: ${{ runner.os }}-nextjs-

      # Build client (Next.js)
      - name: Build Client
        env:
          CI: true
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          cd client
          npm i --legacy-peer-deps
          npm run build

      # Cache server node modules
      - name: Cache Server Node Modules
        uses: actions/cache@v4
        with:
          path: server/node_modules
          key: ${{ runner.os }}-server-${{ hashFiles('server/package-lock.json') }}
          restore-keys: ${{ runner.os }}-server-

      # Cache Vite build output
      - name: Cache Vite Build
        uses: actions/cache@v4
        with:
          path: server/dist
          key: ${{ runner.os }}-vite-${{ hashFiles('server/package-lock.json') }}
          restore-keys: ${{ runner.os }}-vite-

      # Build server (Vite)
      - name: Build Server
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          cd server
          npm i --legacy-peer-deps
          npm run super_admin:ci

      # Deploy to VPS
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 22.13.1 || nvm install 22.13.1
            cd ${{ secrets.PROJECT_PATH }}
            git reset --hard HEAD
            git clean -fd
            git pull origin main --prune --force || true
            cd client
            npm i --legacy-peer-deps
            npm run build
            pm2 restart client || echo "Client restart failed, check PM2 process name"
            cd ../server
            npm i --legacy-peer-deps
            npm run super_admin:ci
            pm2 restart server || echo "Server restart failed, check PM2 process name"